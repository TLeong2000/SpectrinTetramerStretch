print "The current dispRatio value is: ${dispRatio}"
The current dispRatio value is: 1.0

variable totLength equal 1121.3409 # Sum of all bond equilibrium lengths
variable dispDist equal "v_totLength*v_dispRatio/2"
variable commDist equal "v_dispDist*2"
# Displacement distance is divided by two because I want to displace both the bow and stern atoms of each chain.

variable seed equal 1
units real
boundary p p p

atom_style molecular

region main block -25000 25000 -25000 25000 -25000 25000
create_box 42 main bond/types 41 angle/types 40 extra/bond/per/atom 2 extra/angle/per/atom 3 extra/special/per/atom 6
Created orthogonal box = (-25000 -25000 -25000) to (25000 25000 25000)
  2 by 4 by 4 MPI processor grid
region insertionVolume block -15000 15000 -15000 15000 -15000 15000

molecule productionIdealized productionIdealized.txt
Read molecule template productionIdealized:
  1 molecules
  0 fragments
  42 atoms with max type 42
  41 bonds with max type 41
  40 angles with max type 40
  0 dihedrals with max type 0
  0 impropers with max type 0
bond_style harmonic
angle_style harmonic
pair_style none
# pair_style dpd 1.0 20.0 23454
# pair_coeff * * 0.0 0.0

create_atoms 0 random 20 ${seed} insertionVolume mol productionIdealized ${seed} rotate 0 0 0 1
create_atoms 0 random 20 1 insertionVolume mol productionIdealized ${seed} rotate 0 0 0 1
create_atoms 0 random 20 1 insertionVolume mol productionIdealized 1 rotate 0 0 0 1
Created 840 atoms
  using lattice units in orthogonal box = (-25000 -25000 -25000) to (25000 25000 25000)
  create_atoms CPU = 0.001 seconds

# Load in Idealized Chain Parameters:
read_data IdealizedCoeffs.data add merge
Reading data file ...
  orthogonal box = (-25000 -25000 -25000) to (25000 25000 25000)
  2 by 4 by 4 MPI processor grid
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        0        0       
  special bond factors coul:  0        0        0       
     2 = max # of 1-2 neighbors
     2 = max # of 1-3 neighbors
     4 = max # of 1-4 neighbors
    13 = max # of special neighbors
  special bonds CPU = 0.001 seconds
  read_data CPU = 0.006 seconds

# Verify that parameters were assigned as intended:
# write_dump all custom debug/massCheck.${dispRatio}.dump mol id type mass
# write_coeff debug/coeffCheck.${dispRatio}.data

# write_dump all image images/beforeDisplacement.${dispRatio}.png type type zoom 4 adiam 15.0 bond atom 5.0 size 1280 1280


group firstAtoms type 1
20 atoms in group firstAtoms
group lastAtoms type 42
20 atoms in group lastAtoms
displace_atoms firstAtoms move 0  ${dispDist} 0  units box
displace_atoms firstAtoms move 0  560.67045 0  units box
Displacing atoms ...
displace_atoms lastAtoms move  0 -${dispDist} 0  units box
displace_atoms lastAtoms move  0 -560.67045 0  units box
Displacing atoms ...

group internals type 2:41
800 atoms in group internals
group endpoints subtract all internals
40 atoms in group endpoints
# Change communication cutoff distance
comm_modify mode single cutoff ${commDist} vel yes
comm_modify mode single cutoff 1121.3409 vel yes

# write_dump all image images/min.${dispRatio}.before.png type type zoom 4 adiam 15.0 bond atom 5.0 size 1280 1280
# This is keep the endpoints stationary during minimization
fix stationary endpoints setforce 0.0 0.0 0.0

# Minimize the initial structure for initializing velocities
minimize 0.0 1.0e-9 100000 100000
WARNING: Using 'neigh_modify every 1 delay 0 check yes' setting during minimization (../min.cpp:187)
WARNING: No pairwise cutoff or binsize set. Atom sorting therefore disabled. (../atom.cpp:2142)
Per MPI rank memory allocation (min/avg/max) = 0.05169 | 5.62 | 8.26 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press     
         0   0              0              41229012       41229012      -0.015746114  
     17876   0              0              0.00061396002  0.00061396002 -2.0348161e-10
Loop time of 0.937879 on 32 procs for 17876 steps with 840 atoms

99.8% CPU use with 32 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = linesearch alpha is zero
  Energy initial, next-to-last, final = 
      41229011.9210132 0.000613960017801498 0.000613960017801498
  Force two-norm initial, final = 23777.424 0.0005034417
  Force max component initial, final = 3927.1658 6.3872792e-05
  Final line search alpha, max atom move = 0.03125 1.9960248e-06
  Iterations, force evaluations = 17876 24614

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Bond    | 0.0015391  | 0.071101   | 0.40372    |  35.4 |  7.58
Neigh   | 0.013539   | 0.01751    | 0.02086    |   1.6 |  1.87
Comm    | 0.024843   | 0.14512    | 0.50673    |  31.8 | 15.47
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0.00098175 | 0.0025328  | 0.0073775  |   3.2 |  0.27
Other   |            | 0.7016     |            |       | 74.81

Nlocal:          26.25 ave         151 max           0 min
Histogram: 17 3 7 0 3 0 1 0 0 1
Nghost:        32.0625 ave         120 max           0 min
Histogram: 13 4 2 4 1 1 1 4 1 1
Neighs:              0 ave           0 max           0 min
Histogram: 32 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 5.7142857
Neighbor list builds = 1191
Dangerous builds = 0
# Remove the stationary fix now the minimization is done
unfix stationary

# Change communication cutoff dist back to default
comm_modify mode single cutoff 0.0

# write_dump all image images/min.${dispRatio}.post.png type type zoom 4 adiam 15.0 bond atom 5.0 size 1280 1280
# write_dump endpoints custom out/afterMinCoords.${dispRatio}.dump mol id type x y z

reset_timestep 0

velocity internals create 310.0 ${seed} dist gaussian
velocity internals create 310.0 1 dist gaussian

timestep 100
fix integrate internals nvt temp 310.0 310.0 $(25.0*dt)
fix integrate internals nvt temp 310.0 310.0 2500

compute internalsTemp internals temp
thermo 100
thermo_style custom step c_internalsTemp epair emol etotal press

# dump coordsDump all atom 1000 coords_dump.lammpstraj
# dump_modify coordsDump time yes sort id
# dump thermoDump internals yaml 100 thermo_dump.${displacement}.yaml mol id vx vy vz
# dump_modify thermoDump time yes thermo yes sort id
# dump coordsDCD all dcd 100 trajectory.${displacement}.dcd
# dump movie all movie 100 ForcedPolymerStretching.${displacement}.mp4 type type size 1280 720

# dump forceDump all yaml 100 force_dump.${displacement}.yaml mol id fx fy fz
# dump_modify forceDump time yes thermo yes sort id

# dump forceDump all custom 100 out/force_dump.${dispRatio}.dump id mol type fx fy fz

compute molChunks all chunk/atom molecule

group bowAtoms type 1
20 atoms in group bowAtoms
group sternAtoms type 42
20 atoms in group sternAtoms

compute bowComp bowAtoms property/atom fy
compute sternComp sternAtoms property/atom fy

run 0
Per MPI rank memory allocation (min/avg/max) = 0.05162 | 4.932 | 7.26 Mbytes
   Step     c_internalsTemp     E_pair         E_mol          TotEng         Press     
         0   310            0              0.00061396002  738.31746      2.6979767e-07
Loop time of 2.92031e-06 on 32 procs for 0 steps with 840 atoms

124.1% CPU use with 32 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Bond    | 0          | 0          | 0          |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0          | 0          | 0          |   0.0 |  0.00
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 2.92e-06   |            |       |100.00

Nlocal:          26.25 ave         151 max           0 min
Histogram: 17 3 7 0 3 0 1 0 0 1
Nghost:            0.5 ave           2 max           0 min
Histogram: 22 0 0 0 0 4 0 0 0 6
Neighs:              0 ave           0 max           0 min
Histogram: 32 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 5.7142857
Neighbor list builds = 0
Dangerous builds = 0
velocity internals scale 310.0

fix printTemp internals print 100 "$(step) $(c_internalsTemp)" file out/internalsTemp.${dispRatio}.txt
fix printTemp internals print 100 "$(step) $(c_internalsTemp)" file out/internalsTemp.1.0.txt
# fix printCenters all ave/time 100 1 100 c_netForces[*] file massCenters.${displacement}.txt mode vector
# fix netForces all ave/chunk 100 1 100 molChunks fx fy fz norm none file netForces.${displacement}.txt

# Calculate, for every molecule individually, the y force on the bow and (separately) stern atoms:
fix bowForces all ave/chunk 100 1 100 molChunks c_bowComp norm none file out/bowForces.${dispRatio}.txt
fix bowForces all ave/chunk 100 1 100 molChunks c_bowComp norm none file out/bowForces.1.0.txt
fix sternForces all ave/chunk 100 1 100 molChunks c_sternComp norm none file out/sternForces.${dispRatio}.txt
fix sternForces all ave/chunk 100 1 100 molChunks c_sternComp norm none file out/sternForces.1.0.txt

# Calculate the ensemble average of the bow/stern forces:
variable ensBow equal ave(f_bowForces[2])
variable ensStern equal ave(f_sternForces[2])

# Time-average the ensemble average of the bow/stern forces
# We will average over the 1000 most recent timesteps in increments of 1000 steps
fix timeBow all ave/time 1000 1000 1000000 v_ensBow file out/timeAvg_bowForces.${dispRatio}.txt
fix timeBow all ave/time 1000 1000 1000000 v_ensBow file out/timeAvg_bowForces.1.0.txt
fix timeStern all ave/time 1000 1000 1000000 v_ensStern file out/timeAvg_sternForces.${dispRatio}.txt
fix timeStern all ave/time 1000 1000 1000000 v_ensStern file out/timeAvg_sternForces.1.0.txt

# variable netEndForce atom "c_bowComp + c_sternComp"

# Calculate, for every molecule individually, the net endpoint forces
# fix netEndForces all ave/chunk 100 1 100 molChunks v_netEndForce norm none file out/netEndForces.${dispRatio}.txt

# Calculate the ensemble average of the net endpoint forces
# variable ens_netEnd equal ave(f_netEndForces[2])

# Time-average the ensemble average of the net endpoint forces
# We will average over the 100 most recent timesteps in increments of 100 steps
# fix timeAvg_netEnd all ave/time 100 100 10000 v_ens_netEnd file out/timeAvg_netEndForces.${dispRatio}.txt


# variable netTension atom "c_bowComp - c_sternComp"

# Calculate, for every molecule individually, the net tension
# fix tensions all ave/chunk 100 1 100 molChunks v_netTension norm none file out/tensions.${dispRatio}.txt
# write_data MultiplePolymerDisplacements.${displacement}.polymer

# Calculate the ensemble average of the net tensions
# variable ensAvg equal ave(f_tensions[2])

# Time-average the ensemble average of the net tensions
# We will average over the 100 most recent timesteps in increments of 100 steps
# fix timeAvg all ave/time 100 100 10000 v_ensAvg file out/timeAvg_tensions.${dispRatio}.txt

neighbor 10.0 bin

run 10000
0 309.99999999999994316
Per MPI rank memory allocation (min/avg/max) = 0.05317 | 5.106 | 7.512 Mbytes
   Step     c_internalsTemp     E_pair         E_mol          TotEng         Press     
         0   310            0              0.00061396002  738.31746      2.6979767e-07
100 273.47958715717703626
       100   273.47959      0              525.48029      1176.8177     -4.2699799e-07
200 324.21810812451610673
       200   324.21811      0              576.24512      1348.4248     -8.8600251e-07
300 301.60990068378060869
       300   301.6099       0              696.6559       1414.9903     -1.3550085e-06
400 321.17304635605108842
       400   321.17305      0              655.92707      1420.8544     -1.6916742e-06
500 303.56847828708481529
       500   303.56848      0              683.7713       1406.7704     -2.0578024e-06
600 316.64319612153508388
       600   316.6432       0              640.11664      1394.2554     -2.2180698e-06
700 318.46608230947083484
       700   318.46608      0              619.22274      1377.703      -2.4058405e-06
800 315.33687267797336062
       800   315.33687      0              681.63208      1432.6596     -2.6701442e-06
900 300.28083312292130813
       900   300.28083      0              699.8973       1415.0663     -2.8733562e-06
1000 343.82564952036824479
      1000   343.82565      0              662.48446      1481.3627     -2.8963188e-06
1100 266.76702931061566915
      1100   266.76703      0              733.80692      1369.1572     -3.1151147e-06
1200 356.38469962528824908
      1200   356.3847       0              571.84459      1420.6344     -3.0508594e-06
1300 315.67524421553366665
      1300   315.67524      0              748.731        1500.5644     -3.4056794e-06
1400 333.57367867288002117
      1400   333.57368      0              606.15238      1400.6139     -3.2128905e-06
1500 305.28159429465677022
      1500   305.28159      0              755.53305      1482.6122     -3.5676548e-06
1600 311.02847813952308798
      1600   311.02848      0              735.48445      1476.2508     -3.5085045e-06
1700 301.8137502520295925
      1700   301.81375      0              673.75134      1392.5713     -3.458484e-06 
1800 323.81559493611842981
      1800   323.81559      0              701.26251      1472.4835     -3.6997364e-06
1900 313.51896489158752956
      1900   313.51896      0              739.35165      1486.0495     -3.7827205e-06
2000 312.19799880478467458
      2000   312.198        0              697.33338      1440.8851     -3.4911637e-06
2100 285.9505730342308425
      2100   285.95057      0              683.56072      1364.5998     -3.4102047e-06
2200 324.14157162354251795
      2200   324.14157      0              661.12572      1433.1231     -3.4820659e-06
2300 256.4345416042841066
      2300   256.43454      0              771.69214      1382.4339     -3.8414259e-06
2400 330.02897213737378479
      2400   330.02897      0              675.24741      1461.2666     -3.8713164e-06
2500 300.66648720308756992
      2500   300.66649      0              784.82669      1500.9142     -4.0630271e-06
2600 311.2543336879809317
      2600   311.25433      0              740.17004      1481.4743     -3.8436292e-06
2700 298.82441300733302114
      2700   298.82441      0              722.70494      1434.4052     -3.6215723e-06
2800 308.94693039011832525
      2800   308.94693      0              642.40894      1378.2177     -3.3804639e-06
2900 316.72981021815257918
      2900   316.72981      0              703.82793      1458.1729     -3.5648515e-06
3000 299.62470748707198709
      3000   299.62471      0              706.3079       1419.9142     -3.652282e-06 
3100 288.96066909463928596
      3100   288.96067      0              725.47154      1413.6797     -3.8815103e-06
3200 320.95160911695705863
      3200   320.95161      0              718.18368      1482.5836     -4.0577011e-06
3300 326.18366386373344312
      3300   326.18366      0              776.87885      1553.7398     -4.1181002e-06
3400 310.44574856602622503
      3400   310.44575      0              758.69899      1498.0775     -4.1288805e-06
3500 287.7996904405599139
      3500   287.79969      0              819.0393       1504.4824     -4.2164142e-06
3600 342.34440933009869923
      3600   342.34441      0              695.90077      1511.2512     -3.8588815e-06
3700 293.00148481485700813
      3700   293.00148      0              715.57366      1413.4057     -3.6489097e-06
3800 298.31876042533929194
      3800   298.31876      0              656.33142      1366.8274     -3.3701173e-06
3900 290.06267165417654041
      3900   290.06267      0              732.84517      1423.6779     -3.4017628e-06
4000 303.15312635713416967
      4000   303.15313      0              712.26894      1434.2788     -3.2940416e-06
4100 288.12965965358546327
      4100   288.12966      0              752.23098      1438.4599     -3.1945451e-06
4200 340.06935971801260621
      4200   340.06936      0              568.16316      1378.0952     -2.9157417e-06
4300 318.6281052019019171
      4300   318.62811      0              631.96629      1390.8324     -3.1170163e-06
4400 324.74855985727612051
      4400   324.74856      0              625.83349      1399.2765     -3.2712508e-06
4500 322.82354339170819912
      4500   322.82354      0              695.45172      1464.31       -3.6064876e-06
4600 306.85283942207576047
      4600   306.85284      0              790.18699      1521.0083     -3.9378567e-06
4700 294.98583748557786066
      4700   294.98584      0              782.92598      1485.4841     -3.9577578e-06
4800 327.92886636648290732
      4800   327.92887      0              701.12009      1482.1375     -3.8159107e-06
4900 327.32125782367683087
      4900   327.32126      0              693.05509      1472.6254     -3.8982752e-06
5000 333.55327150126925062
      5000   333.55327      0              627.5532       1421.9661     -3.9444807e-06
5100 331.15725588097978971
      5100   331.15726      0              706.46447      1495.1709     -4.2146636e-06
5200 306.17919328620206443
      5200   306.17919      0              755.68368      1484.9006     -4.4468274e-06
5300 320.2186883562722528
      5300   320.21869      0              769.14852      1531.8029     -4.5592039e-06
5400 304.63707234972781634
      5400   304.63707      0              774.21001      1499.7541     -4.4424595e-06
5500 332.70110863726466732
      5500   332.70111      0              718.61781      1511.0011     -4.3266445e-06
5600 323.7350624989279595
      5600   323.73506      0              705.86629      1476.8955     -4.2768878e-06
5700 354.56800464979136223
      5700   354.568        0              694.87666      1539.3397     -4.082747e-06 
5800 290.55618752882497802
      5800   290.55619      0              716.9528       1408.961      -3.8183397e-06
5900 267.93670551460257911
      5900   267.93671      0              739.98885      1378.1249     -3.7534174e-06
6000 309.44751001845975225
      6000   309.44751      0              749.53497      1486.536      -3.7522101e-06
6100 314.50156281951257142
      6100   314.50156      0              708.92276      1457.9608     -3.6651949e-06
6200 315.54899256648565142
      6200   315.54899      0              669.04821      1420.5809     -3.5295131e-06
6300 331.57422104830789067
      6300   331.57422      0              676.89509      1466.5945     -3.3788263e-06
6400 326.86610882326488081
      6400   326.86611      0              642.72844      1421.2147     -3.1089384e-06
6500 333.3220540959820255
      6500   333.32205      0              637.47176      1431.334      -2.9805365e-06
6600 297.97490521587417334
      6600   297.97491      0              692.08995      1401.767      -2.9587563e-06
6700 310.10561104924983056
      6700   310.10561      0              681.45232      1420.0207     -2.8428114e-06
6800 299.04832355243502207
      6800   299.04832      0              659.57513      1371.8087     -2.6665927e-06
6900 347.71558311018668519
      6900   347.71558      0              564.62691      1392.7697     -2.4162386e-06
7000 306.18171808252560595
      7000   306.18172      0              610.66491      1339.8879     -2.3513864e-06
7100 312.40236432141904288
      7100   312.40236      0              586.47821      1330.5167     -2.339206e-06 
7200 305.96255057301135594
      7200   305.96255      0              645.34722      1374.0482     -2.516695e-06 
7300 289.5178171439158632
      7300   289.51782      0              743.87898      1433.4141     -2.8604158e-06
7400 345.90885056262146691
      7400   345.90885      0              685.70643      1509.5462     -2.8223585e-06
7500 314.30838405953716119
      7500   314.30838      0              645.53786      1394.1158     -2.7585502e-06
7600 300.61028374165346122
      7600   300.61028      0              709.75254      1425.7062     -2.8311683e-06
7700 306.3773577787595741
      7700   306.37736      0              705.66328      1435.3522     -2.8527954e-06
7800 322.00600844671293999
      7800   322.00601      0              635.08057      1401.9917     -2.7123353e-06
7900 330.33291888162278838
      7900   330.33292      0              642.35701      1429.1001     -2.6673313e-06
8000 310.51049686238047798
      8000   310.5105       0              687.40312      1426.9358     -2.7153834e-06
8100 316.78814821901011101
      8100   316.78815      0              671.37667      1425.8606     -2.7419163e-06
8200 294.63804978150881198
      8200   294.63805      0              695.39521      1397.125      -2.805655e-06 
8300 279.21766818595926907
      8300   279.21767      0              754.47158      1419.4751     -2.8973936e-06
8400 312.46495867668505753
      8400   312.46496      0              688.89004      1433.0776     -2.7055836e-06
8500 312.3062386748850372
      8500   312.30624      0              613.53525      1357.3448     -2.5366636e-06
8600 323.96510353225176004
      8600   323.9651       0              626.72192      1398.299      -2.4600336e-06
8700 323.54449338789629564
      8700   323.54449      0              639.63504      1410.2104     -2.5494804e-06
8800 280.27703706737531775
      8800   280.27704      0              665.97835      1333.505      -2.6748725e-06
8900 306.53900270799437067
      8900   306.539        0              652.48658      1382.5605     -2.834335e-06 
9000 283.64342575732018759
      9000   283.64343      0              758.19261      1433.7369     -3.132385e-06 
9100 315.72422744527347049
      9100   315.72423      0              679.73542      1431.6855     -3.0357761e-06
9200 273.32525201691618122
      9200   273.32525      0              681.19475      1332.1645     -3.0825805e-06
9300 317.19122107115066456
      9300   317.19122      0              686.5098       1441.9537     -3.3822437e-06
9400 291.84248819365672034
      9400   291.84249      0              773.06496      1468.1366     -3.7178995e-06
9500 312.38393872440445875
      9500   312.38394      0              734.17572      1478.1703     -3.7863916e-06
9600 305.25332973532925962
      9600   305.25333      0              760.76267      1487.7745     -3.8908112e-06
9700 294.70745470491220885
      9700   294.70745      0              752.46761      1454.3627     -3.8829225e-06
9800 310.52710382022843305
      9800   310.5271       0              685.4653       1425.0375     -3.7467619e-06
9900 309.08227985380045766
      9900   309.08228      0              737.40323      1473.5344     -3.8456881e-06
10000 314.69974626212234625
     10000   314.69975      0              708.53481      1458.0449     -3.8365788e-06
Loop time of 0.219226 on 32 procs for 10000 steps with 840 atoms

Performance: 394113.117 ns/day, 0.000 hours/ns, 45614.944 timesteps/s
99.6% CPU use with 32 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Bond    | 0.00048713 | 0.02075    | 0.11656    |  18.7 |  9.47
Neigh   | 0.0013456  | 0.0014271  | 0.0015454  |   0.1 |  0.65
Comm    | 0.0035636  | 0.015634   | 0.12318    |  20.0 |  7.13
Output  | 0.003406   | 0.0035075  | 0.005548   |   0.6 |  1.60
Modify  | 0.043071   | 0.14342    | 0.17364    |   9.6 | 65.42
Other   |            | 0.03448    |            |       | 15.73

Nlocal:          26.25 ave         151 max           0 min
Histogram: 17 3 7 0 3 0 1 0 0 1
Nghost:          0.625 ave           2 max           0 min
Histogram: 22 0 0 0 0 0 0 0 0 10
Neighs:              0 ave           0 max           0 min
Histogram: 32 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 5.7142857
Neighbor list builds = 120
Dangerous builds = 0

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (../comm.cpp:98)
  using 1 OpenMP thread(s) per MPI task

next dispRatio
Increment via next: value 21 on partition 0
jump IdealizedStretch.lammps
Total wall time: 0:00:37
